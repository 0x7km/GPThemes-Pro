/* === RIGHT - CONVERSATION CONTAINER === */
main [role='presentation'] {
	// $avatar-color: css('--c-avatar');

	/* Main Page chat-container  Bg*/
	&,
	/* Shared Link Page Bg */
	.bg-token-main-surface-primary.h-full.overflow-auto {
		background-color: var(--c-bg-chats-container) !important;
	}

	/* GPT logo in chat bubble */
	.gizmo-bot-avatar div, 
	/* GPT logo in "New Chat" main chat-container */
	.gizmo-shadow-stroke {
		background-color: var(--c-accent) !important;
		color: var(--c-on-accent) !important;
	}
}

/* === RIGHT - Chats - Gap from heading and svg icons ===*/
// main [data-message-author-role='user'],
// main [data-message-author-role='assistant'] {
// 	margin-top: var(--mt-chat-txt) !important;
// 	margin-bottom: var(--mb-chat-txt) !important;
// }

/* @ === RIGHT - CHATS BUBBLES ===*/
main [data-testid^='conversation-turn-'] {
	/* Edit icon in user chat for example. Edit state user chat bg  */
	--main-surface-tertiary: var(--c-surface-3) !important;
	// --main-surface-tertiary: hsla(var(--accent-hsl) / 0.5) !important;

	--c-avatar: var(--avatar-color);
	margin-bottom: var(--mb-chat-bubble) !important;

	/* Horizontal gap from chat bubble to screen-edge */
	& > div {
		/* Original is px-4 or 1rem */
		@include dev(mob) {
			padding-left: 0.45rem;
			padding-right: 0.45rem;
		}
	}

	/* RIGHT - CHATS BUBBLES DIV */
	& > div:first-child > div:first-child {
		/* "Was this response better or worse? 👍👎" el when clicked on regenerate answer btn  */
		.bg-token-main-surface-secondary:has(button[title^='This response was']) {
			background-color: transparent !important;
			color: var(--c-subtext-2) !important;
			border: 1px solid var(--c-border);
			border-radius: var(--br-contextmenu);

			/* "Same" svg, fix white border for visualy consistency */
			svg.rounded-full {
				border-color: var(--c-avatar);
				// border-color: var(--c-accent);
			}
			/* 👍👎 */
			button[title] {
				border-radius: var(--br-btn) !important;
				border: 1px solid transparent;
				transition: transform 0.2s $easeInOutSine;

				/* "Better", "Worse", "Same" */
				span {
					transition: color 0.2s $easeInOutSine;
					color: var(--c-subtext-2) !important;
				}

				&:hover {
					background-color: transparent !important;
					border-color: var(--c-border) !important;
					transform: translateY(-4%);

					span {
						color: var(--c-avatar) !important;
						// border-color: var(--c-accent) !important;
					}
				}
			}
		}
	}

	/*  Chat bubble footer SVG icons - edit, read aloud, copy, regenerate, bad response */
	[class*='empty:hidden'] {
		button svg {
			color: var(--c-accent);
		}
	}

	/* @ RIGHT - CHATS BUBBLES - USER  */
	&:has([data-message-author-role='user']) {
		/*  RIGHT - CHATS BUBBLE BG */
		& > div:first-child > div:first-child {
			/* ? gpt4o - User message */
			[class*='group/text-message rounded-3xl bg-[#f4f4f4]'] {
				background-color: var(--c-bg-msg-user);
				padding: var(--p-chat-bubble) calc(var(--p-chat-bubble) * 1.2);
				border-radius: var(--br-chat-bubble) !important;
			}
		}

		/* Flex-end the Reply in user chat bubble */
		[data-message-author-role='user'] {
			align-items: flex-end !important;
		}

		/* Reply in msg */
		div:has(> svg + .line-clamp-3) {
			position: relative;
			align-items: flex-end !important;
			padding: 5px 10px;
			background-color: hsla(var(--accent-hsl) / 0.15);
			color: var(--c-accent);
			border-radius: var(--br-btn);
			border-left: 5px solid var(--c-accent);

			/* &::after {
				content: '';
				position: absolute;
				height: 50%;
				width: 3px;
				background-color: var(--c-accent);
				left: 8px;
				border-radius: 5px;
				top: 50%;
				transform: translate(-50%, -50%);
			} */
		}
	}

	/* User chat bubble - Edit state.
	There is no [data-message-author-role="user"] when we clicked on "Edit Prompt", so we need select and like this for that case scenario */
	div:has(> textarea) {
		// .bg-token-main-surface-tertiary:has(> textarea) {
		--main-surface-tertiary: hsla(var(--accent-hsl) / 0.13) !important;
		padding: var(--p-chat-bubble) !important;

		/* Make the text in edit textarea to be the full-width */
		textarea {
			width: 100%;
		}
	}

	/* @ RIGHT - CHATS BUBBLES - GPT */
	&:has([data-message-author-role='assistant']) {
		/*   RIGHT - CHATS BUBBLE BG  */
		& > div:first-child > div:first-child {
			background-color: var(--c-bg-msg-gpt);

			--pt-multiplier: 1.3;
			padding: calc(var(--p-chat-bubble) * var(--pt-multiplier)) var(--p-chat-bubble) var(--p-chat-bubble)
				var(--p-chat-bubble) !important;
			// padding: var(--p-chat-bubble);
			border-radius: var(--br-chat-bubble) !important;
			letter-spacing: 0.3px;
			line-height: 1.8 !important;

			@include dev(mob) {
				--pt-multiplier: 1.4;
			}

			/* Left chat content parent 
		! Adding fixed width prevent content overflowing on the right side of chat bubble when there is some markdown (<pre>) element shown with scrolling horizontally */
			/* 
			0.75rem = gap-3 = gap between profile svg/img and right content
			2.25rem = w-9 = gpt profile svg parent width */
			.relative.flex.w-full.flex-col {
				--svg-w: 2.25rem;
				--svg-gap: 0.75rem;

				width: calc(
					100% - var(--svg-w) - var(--svg-gap) - var(--p-chat-bubble)
				) !important; // more consistent width (right chat bubble spacing = left spacing)

				span[data-state] {
					display: flex;
					place-items: center;
				}

				@include dev(mob) {
					--svg-w: 24px;
					// --moveToLeft: var(--svg-gap);
					// --moveToLeft: var(--svg-w);
					--moveToLeft: calc(var(--svg-w) + (var(--svg-gap) / 1.5));

					/* Markdown parent - actually message content, without logo and User/ChatGPT name */
					.flex-col.gap-1.md\:gap-3 {
						transform: translateX(calc(var(--moveToLeft) * -1));
						width: calc(100% + var(--moveToLeft) + var(--p-chat-bubble)) !important;
					}
				}
			}
		}

		/* Response 1 or Response 2 chat bubble when we have to choose 1 answer */
		& > div:first-child button:has([data-message-author-role='assistant']) {
			background-color: var(--c-bg-msg-gpt) !important;
			border-radius: var(--br-chat-bubble) !important;
			padding: 2rem;
			box-shadow: 0 0 0px 0px transparent;
			transition: transform 0.3s $easeInOutSine, border 0.3s $easeInOutSine;

			&:hover {
				box-shadow: var(--box-shadow-contextmenu);
				transform: translateY(-5px);
			}

			/* GPT logo */
			// .rounded-full svg {
			// 	color: var(--c-surface-1) !important;
			// }

			/* "Response 1", "Response 2" txt */
			.text-sm.text-token-text-tertiary {
				text-transform: uppercase;
				color: var(--c-accent) !important; // iliti zelena kao i svg
				font-weight: bold;
			}
		}

		.overflow-hidden:has(> .divide-y) {
			.from-token-main-surface-secondary {
				--gradient-color-from: var(--c-surface-2) !important;

				svg {
					color: var(--c-accent) !important;
				}
			}

			a {
				border-radius: var(--br-btn);
			}
		}
	}
}

/* "Searched x sites" Links wrapper! */
html.dark main [data-testid^='conversation-turn-']:has([data-message-author-role='assistant']) {
	.overflow-hidden:has(> .divide-y) {
		.from-token-main-surface-secondary {
			--gradient-color-from: var(--c-surface-3) !important;
		}
		a:hover {
			background-color: var(--c-surface-3);
		}
	}
}
html[data-gptheme='oled'] main [data-testid^='conversation-turn-']:has([data-message-author-role='assistant']) {
	.overflow-hidden:has(> .divide-y) {
		.from-token-main-surface-secondary {
			--gradient-color-from: var(--c-surface-2) !important;
		}
		a:hover {
			background-color: var(--c-surface-2);
		}
	}
}
